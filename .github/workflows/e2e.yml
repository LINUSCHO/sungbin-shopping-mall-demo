name: E2E

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:7
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'" \
          --health-interval 10s \
          --health-timeout 5s \
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install deps (server)
        working-directory: server
        run: npm ci

      - name: Run server E2E
        working-directory: server
        env:
          PORT: 5001
          MONGO_URI: mongodb://localhost:27017/shopping-mall
        run: npm run e2e

      - name: Install deps (client)
        working-directory: client
        run: |
          npm ci
          npx playwright install --with-deps

      - name: Start backend
        run: |
          nohup node server/src/index.js >/tmp/server.log 2>&1 & echo $! > /tmp/server.pid
          for i in {1..60}; do curl -fsS http://localhost:5001/health && break; sleep 0.5; done

      - name: Start frontend
        run: |
          nohup npm --prefix client run dev >/tmp/client.log 2>&1 & echo $! > /tmp/client.pid
          for i in {1..60}; do curl -fsS http://localhost:5173 && break; sleep 0.5; done

      - name: Run Playwright tests (client)
        working-directory: client
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:5173
        run: npx playwright test

      - name: Upload Playwright report (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: client/playwright-report

      - name: Teardown services
        if: always()
        run: |
          kill $(cat /tmp/client.pid) 2>/dev/null || true
          kill $(cat /tmp/server.pid) 2>/dev/null || true


